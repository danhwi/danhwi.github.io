!function(){"use strict";const e=1654865529522,t=`cache${e}`,n=["/client/client.6db2f30a.js","/client/inject_styles.5607aec6.js","/client/index.4a11c001.js","/client/index.53f7a0f3.js","/client/Board.5e3ced92.js","/client/displaced.d98e69f7.js","/client/Post.29f86f67.js","/client/index.aa7dadc1.js","/client/emotional-ups-and-downs.884f306e.js","/client/software-engineering.e7b47392.js","/client/unconscious-judgment.d668fa6c.js","/client/act-engineering.c42939bd.js","/client/deux-message.f0d61421.js","/client/act-agile.1fa389f5.js","/client/index.ad2272f8.js","/client/press-the-shutter-of-the-writing.9ba0ec03.js","/client/responsibility-and-authority.f148683d.js","/client/difference-of-common-sense.b5950526.js","/client/walking-through-the-past.d177f30e.js","/client/energy-flow-direction.78017f89.js","/client/incomplete-writing.9dd5ba02.js","/client/urge-to-do-quickly.9705e435.js","/client/grass-planting.52aa38bf.js","/client/even-too-busy.1fce0ac0.js","/client/passive-skill.adb20590.js","/client/promise.3bdbd8ad.js","/client/writing.f9b151f0.js"].concat(["/service-worker-index.html","/favicon.png","/global.css","/google64eadc65d464d244.html","/logo-192.png","/logo-512.png","/manifest.json","/navera8174f25d63d590f89d7a1fc30dda9f2.html","/robots.txt","/rss.xml","/sitemap.xml"]),s=new Set(n);self.addEventListener("install",(e=>{e.waitUntil(caches.open(t).then((e=>e.addAll(n))).then((()=>{self.skipWaiting()})))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((async e=>{for(const n of e)n!==t&&await caches.delete(n);self.clients.claim()})))})),self.addEventListener("fetch",(t=>{if("GET"!==t.request.method||t.request.headers.has("range"))return;const n=new URL(t.request.url),c=n.protocol.startsWith("http"),i=n.hostname===self.location.hostname&&n.port!==self.location.port,a=n.host===self.location.host&&s.has(n.pathname),l="only-if-cached"===t.request.cache&&!a;!c||i||l||t.respondWith((async()=>a&&await caches.match(t.request)||async function(t){const n=await caches.open(`offline${e}`);try{const e=await fetch(t);return n.put(t,e.clone()),e}catch(e){const s=await n.match(t);if(s)return s;throw e}}(t.request))())}))}();
